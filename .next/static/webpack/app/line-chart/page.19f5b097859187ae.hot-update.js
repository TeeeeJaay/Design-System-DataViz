"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/line-chart/page",{

/***/ "(app-pages-browser)/./src/app/line-chart/LineChart.tsx":
/*!******************************************!*\
  !*** ./src/app/line-chart/LineChart.tsx ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ LineChart; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3 */ \"(app-pages-browser)/./node_modules/d3/src/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n\nvar _s = $RefreshSig$();\n\n\n// Definer farver for hver datasÃ¦t\nconst colorScale = d3__WEBPACK_IMPORTED_MODULE_1__.scaleOrdinal().domain([\n    \"MCU\",\n    \"DCU\"\n]).range(d3__WEBPACK_IMPORTED_MODULE_1__.schemeSet2);\nfunction LineChart(param) {\n    let { data, withHover, withGridlines, withCurveLine, withDots } = param;\n    _s();\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const svgRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const tooltipRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const [containerWidth, setContainerWidth] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(800);\n    const [visibility, setVisibility] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)({\n        MCU: true,\n        DCU: true\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const updateWidth = ()=>{\n            if (containerRef.current) {\n                setContainerWidth(containerRef.current.getBoundingClientRect().width);\n            }\n        };\n        updateWidth();\n        window.addEventListener(\"resize\", updateWidth);\n        return ()=>window.removeEventListener(\"resize\", updateWidth);\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (!svgRef.current) {\n            svgRef.current = d3__WEBPACK_IMPORTED_MODULE_1__.select(containerRef.current).append(\"svg\").node();\n        }\n        if (!tooltipRef.current) {\n            tooltipRef.current = d3__WEBPACK_IMPORTED_MODULE_1__.select(containerRef.current).append(\"div\").classed(\"absolute hidden p-3 bg-white bg-opacity-80 border rounded pointer-events-none text-sm\", true).node();\n        }\n        const svg = d3__WEBPACK_IMPORTED_MODULE_1__.select(svgRef.current);\n        const tooltip = d3__WEBPACK_IMPORTED_MODULE_1__.select(tooltipRef.current);\n        svg.selectAll(\"*\").remove();\n        const margin = {\n            top: 20,\n            right: 40,\n            bottom: 60,\n            left: 40\n        };\n        const width = containerWidth - margin.left - margin.right;\n        const height = 500 - margin.top - margin.bottom;\n        svg.attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom);\n        const g = svg.append(\"g\").attr(\"transform\", \"translate(\".concat(margin.left, \",\").concat(margin.top, \")\"));\n        // Filter data based on visibility\n        const filteredData = {\n            MCU: visibility.MCU ? data.MCU : [],\n            DCU: visibility.DCU ? data.DCU : []\n        };\n        const allVisibleData = [\n            ...filteredData.MCU,\n            ...filteredData.DCU\n        ];\n        const x = d3__WEBPACK_IMPORTED_MODULE_1__.scalePoint().range([\n            0,\n            width\n        ]).domain(allVisibleData.map((d)=>d.name).filter((value, index, self)=>self.indexOf(value) === index));\n        const y = d3__WEBPACK_IMPORTED_MODULE_1__.scaleLinear().range([\n            height,\n            0\n        ]).domain([\n            0,\n            d3__WEBPACK_IMPORTED_MODULE_1__.max(allVisibleData, (d)=>d.value) || 0\n        ]);\n        const xAxis = d3__WEBPACK_IMPORTED_MODULE_1__.axisBottom(x);\n        const yAxis = d3__WEBPACK_IMPORTED_MODULE_1__.axisLeft(y).ticks(d3__WEBPACK_IMPORTED_MODULE_1__.max(allVisibleData, (d)=>d.value));\n        g.append(\"g\").attr(\"transform\", \"translate(0,\".concat(height, \")\")).call(xAxis);\n        g.append(\"g\").call(yAxis);\n        // Redraw lines and dots for visible datasets\n        Object.keys(filteredData).forEach((key)=>{\n            generateLine(filteredData[key], colorScale(key), key);\n        });\n        if (withGridlines) {\n            g.selectAll(\".grid-line\").data(y.ticks()).enter().append(\"line\").classed(\"grid-line\", true).attr(\"x1\", 0).attr(\"x2\", width).attr(\"y1\", y).attr(\"y2\", y).attr(\"stroke\", \"#ccc\");\n        }\n        const generateLine = (dataset, color, label)=>{\n            if (!visibility[label]) return; // Only draw if visible\n            const line = d3__WEBPACK_IMPORTED_MODULE_1__.line().x((d)=>x(d.name)).y((d)=>y(d.value));\n            if (withCurveLine) {\n                line.curve(d3__WEBPACK_IMPORTED_MODULE_1__.curveMonotoneX);\n            }\n            const path = g.append(\"path\").datum(dataset).attr(\"fill\", \"none\").attr(\"stroke\", colorScale(label)).attr(\"stroke-width\", 2).attr(\"d\", line);\n            if (withDots) {\n                const dots = g.selectAll(\".dot-\".concat(label)).data(dataset).enter().append(\"circle\").attr(\"class\", \"dot dot-\".concat(label)).attr(\"cx\", (d)=>x(d.name)).attr(\"cy\", (d)=>y(d.value)).attr(\"r\", 5).attr(\"fill\", colorScale(label));\n                if (withHover) {\n                    dots.on(\"mouseover\", function(event, d) {\n                        d3__WEBPACK_IMPORTED_MODULE_1__.select(this).attr(\"r\", 8);\n                        tooltip.html(\"<strong>\".concat(d.name, \"</strong>: \").concat(d.value)).classed(\"hidden\", false).style(\"top\", \"\".concat(event.pageY - 10, \"px\")).style(\"left\", \"\".concat(event.pageX + 10, \"px\"));\n                    }).on(\"mouseout\", function() {\n                        d3__WEBPACK_IMPORTED_MODULE_1__.select(this).attr(\"r\", 5);\n                        tooltip.classed(\"hidden\", true);\n                    });\n                }\n            }\n            return path; // Return the path for possible manipulation later\n        };\n        // Generate lines for each dataset\n        generateLine(data.MCU, \"MCU\", \"MCU\");\n        generateLine(data.DCU, \"DCU\", \"DCU\");\n        // Add a legend below the chart\n        const legend = svg.append(\"g\").attr(\"class\", \"legend\").attr(\"transform\", \"translate(\".concat(margin.left, \", \").concat(height + margin.top + 30, \")\")); // Positioning the legend below the chart\n        legend.selectAll(null).data([\n            \"MCU\",\n            \"DCU\"\n        ]).enter().append(\"rect\").attr(\"x\", (d, i)=>i * 100) // Horizontal spacing\n        .attr(\"width\", 18).attr(\"height\", 18).style(\"fill\", (d)=>colorScale(d)).on(\"click\", (event, d)=>{\n            // Add click handler to toggle visibility\n            setVisibility((prev)=>({\n                    ...prev,\n                    [d]: !prev[d]\n                }));\n        }).on(\"mouseenter\", function(event, d) {\n            d3__WEBPACK_IMPORTED_MODULE_1__.select(this).classed(\"stroke-2 stroke-gray-400\", true);\n        }).on(\"mouseleave\", function(event, d) {\n            d3__WEBPACK_IMPORTED_MODULE_1__.select(this).classed(\"stroke-2 stroke-gray-400\", false);\n        });\n        legend.selectAll(null).data([\n            \"MCU\",\n            \"DCU\"\n        ]).enter().append(\"text\").attr(\"x\", (d, i)=>i * 100 + 24).attr(\"y\", 9) // Vertically align text\n        .attr(\"dy\", \".35em\").text((d)=>d).on(\"click\", (event, d)=>{\n            // Add same click handler to text\n            setVisibility((prev)=>({\n                    ...prev,\n                    [d]: !prev[d]\n                }));\n        });\n    }, [\n        data,\n        withGridlines,\n        withCurveLine,\n        containerWidth,\n        withDots,\n        withHover,\n        visibility\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: containerRef,\n        style: {\n            width: \"100%\",\n            height: \"100%\"\n        }\n    }, void 0, false, {\n        fileName: \"/Users/tinamariejensen/Documents/code/Design-System-DataViz/src/app/line-chart/LineChart.tsx\",\n        lineNumber: 252,\n        columnNumber: 10\n    }, this);\n}\n_s(LineChart, \"WgWNomumWpVFU23mMuGmaFQDLFs=\");\n_c = LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/line-chart/LineChart.tsx\n"));

/***/ })

});